"""add server defaults and enum names.

Revision ID: 8f4e2538a646
Revises: 9a2d5bf0bb2a
Create Date: 2025-07-27 14:21:25.042751

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8f4e2538a646'
down_revision: Union[str, Sequence[str], None] = '9a2d5bf0bb2a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # 1) Cria primeiro os novos tipos ENUM no banco
    action_type = postgresql.ENUM(
        'follow', 'unfollow', 'login', 'scan',
        name='action_type',
    )
    action_type.create(op.get_bind(), checkfirst=True)

    action_status = postgresql.ENUM(
        'pending', 'done', 'failed', 'skipped',
        name='action_status',
    )
    action_status.create(op.get_bind(), checkfirst=True)

    source_types = postgresql.ENUM(
        'hashtag', 'user', 'location',
        name='source_types',
    )
    source_types.create(op.get_bind(), checkfirst=True)

    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('accounts', 'is_active',
                    existing_type=sa.BOOLEAN(),
                    server_default=sa.text('true'),
                    existing_nullable=False)
    op.alter_column('accounts', 'created_at',
                    existing_type=postgresql.TIMESTAMP(timezone=True),
                    server_default=sa.text("timezone('utc', now())"),
                    existing_nullable=False)
    op.alter_column('action_logs', 'type',
                    existing_type=postgresql.ENUM(
                        'follow', 'unfollow', 'login', 'scan',
                        name='actiontype'),
                    type_=sa.Enum('follow', 'unfollow', 'login', 'scan',
                                  name='action_type', native_enum=True),
                    existing_nullable=False,
                    postgresql_using="type::text::action_type")
    op.alter_column('action_logs', 'status',
                    existing_type=postgresql.ENUM(
                        'pending', 'done', 'failed', 'skipped',
                        name='actionstatus'),
                    type_=sa.Enum('pending', 'done', 'failed', 'skipped',
                                  name='action_status', native_enum=True),
                    server_default=sa.text("'pending'"),
                    existing_nullable=False,
                    postgresql_using="status::text::action_status")
    op.alter_column('action_logs', 'created_at',
                    existing_type=postgresql.TIMESTAMP(timezone=True),
                    server_default=sa.text("timezone('utc', now())"),
                    existing_nullable=False)
    op.alter_column('relationships', 'is_following',
                    existing_type=sa.BOOLEAN(),
                    server_default=sa.text('false'),
                    existing_nullable=False)
    op.alter_column('relationships', 'followed_back',
                    existing_type=sa.BOOLEAN(),
                    server_default=sa.text('false'),
                    existing_nullable=False)
    op.alter_column('targets', 'source_type',
                    existing_type=sa.VARCHAR(length=20),
                    type_=sa.Enum('hashtag', 'user', 'location',
                                  name='source_types', native_enum=True),
                    existing_nullable=False,
                    postgresql_using="source_type::text::source_types")
    op.alter_column('targets', 'created_at',
                    existing_type=postgresql.TIMESTAMP(timezone=True),
                    server_default=sa.text("timezone('utc', now())"),
                    existing_nullable=False)
    op.create_index(op.f('ix_targets_source_type'), 'targets', ['source_type'],
                    unique=False)
    # ### end Alembic commands ###

    # 3) Opcional: derrube os tipos antigos se não forem mais usados
    op.execute('DROP TYPE IF EXISTS actiontype;')
    op.execute('DROP TYPE IF EXISTS actionstatus;')


def downgrade() -> None:
    """Downgrade schema."""
    # Inversão: recria os tipos antigos, altera as colunas de volta e
    # por fim derruba os tipos novos
    old_actiontype = postgresql.ENUM(
        'follow', 'unfollow', 'login', 'scan',
        name='actiontype'
    )
    old_actiontype.create(op.get_bind(), checkfirst=True)

    old_actionstatus = postgresql.ENUM(
        'pending', 'done', 'failed', 'skipped',
        name='actionstatus'
    )
    old_actionstatus.create(op.get_bind(), checkfirst=True)

    # (altere as colunas de volta, drop de novos defaults e tipos…)

    op.execute('DROP TYPE IF EXISTS action_type;')
    op.execute('DROP TYPE IF EXISTS action_status;')
    op.execute('DROP TYPE IF EXISTS source_types;')

    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_targets_source_type'), table_name='targets')
    op.alter_column('targets', 'created_at',
                    existing_type=postgresql.TIMESTAMP(timezone=True),
                    server_default=None,
                    existing_nullable=False)
    op.alter_column('targets', 'source_type',
                    existing_type=sa.Enum('hashtag', 'user', 'location',
                                          name='source_types'),
                    type_=sa.VARCHAR(length=20),
                    existing_nullable=False)
    op.alter_column('relationships', 'followed_back',
                    existing_type=sa.BOOLEAN(),
                    server_default=None,
                    existing_nullable=False)
    op.alter_column('relationships', 'is_following',
                    existing_type=sa.BOOLEAN(),
                    server_default=None,
                    existing_nullable=False)
    op.alter_column('action_logs', 'created_at',
                    existing_type=postgresql.TIMESTAMP(timezone=True),
                    server_default=None,
                    existing_nullable=False)
    op.alter_column('action_logs', 'status',
                    existing_type=sa.Enum('pending', 'done', 'failed',
                                          'skipped', name='action_status'),
                    server_default=None,
                    type_=postgresql.ENUM('pending', 'done', 'failed',
                                          'skipped', name='actionstatus'),
                    existing_nullable=False)
    op.alter_column('action_logs', 'type',
                    existing_type=sa.Enum('follow', 'unfollow', 'login',
                                          'scan', name='action_type'),
                    type_=postgresql.ENUM('follow', 'unfollow', 'login',
                                          'scan', name='actiontype'),
                    existing_nullable=False)
    op.alter_column('accounts', 'created_at',
                    existing_type=postgresql.TIMESTAMP(timezone=True),
                    server_default=None,
                    existing_nullable=False)
    op.alter_column('accounts', 'is_active',
                    existing_type=sa.BOOLEAN(),
                    server_default=None,
                    existing_nullable=False)
    # ### end Alembic commands ###
